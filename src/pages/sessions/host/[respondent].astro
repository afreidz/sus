---
import api from "@/helpers/api";
import SessionLayout from "@/layouts/session.astro";
import HostComponent from "@/components/sessions/Host.svelte";

const { respondent: id } = Astro.params;

const respondent = await api({
  method: "GET",
  base: Astro.url.origin,
  endpoint: "respondentId",
  headers: Astro.request.headers,
  substitutions: { respondentId: id ?? "" },
});

const typeId = (
  await api({
    endpoint: "typesType",
    base: Astro.url.origin,
    headers: Astro.request.headers,
    substitutions: { typesType: "tasks" },
  })
)?.id;

const revision =
  typeId === ""
    ? null
    : await api({
        method: "GET",
        base: Astro.url.origin,
        endpoint: "revisionSurveyType",
        headers: Astro.request.headers,
        substitutions: {
          typeId,
          revisionId: respondent.revisionId ?? "",
        },
      });
---

{
  revision && (
    <SessionLayout>
      <HostComponent {revision} {respondent} client:only="svelte" />
    </SessionLayout>
  )
}
