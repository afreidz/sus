---
import api from "@/helpers/api";
import PrivateLayout from "@/layouts/private.astro";
import SystemRevisionNav from "@/components/private/SystemRevisionNav.svelte";
import SystemRevisionContent from "@/components/private/SystemRevision.svelte";

const id = Astro.params.id as string;
const system = await api({
  method: "GET",
  endpoint: "systemId",
  base: Astro.url.origin,
  headers: Astro.request.headers,
  substitutions: { systemId: id },
});

const typeId = (
  await api({
    endpoint: "typesType",
    base: Astro.url.origin,
    headers: Astro.request.headers,
    substitutions: { typesType: "sus" },
  })
)?.id;
---

<PrivateLayout class="flex-1 flex flex-col items-center">
  <div class="flex w-full justify-between items-center px-8 py-4">
    <div class="text-sm breadcrumbs w-full text-left">
      <ul>
        <li><a href="/clients">Clients</a></li>
        <li>
          <a href={`/clients/${system.client.id}`}>{system.client.name}</a>
        </li>
        <li class="font-semibold">{system.title}</li>
      </ul>
    </div>
    <!-- <a class="btn btn-sm btn-outline" href={`/systems/summary/${system.id}`}
      >Client Readout</a
    > -->
  </div>
  <div class="p-4 flex w-full">
    <SystemRevisionNav
      {system}
      vertical
      showMeta
      client:load
      class="flex-none"
      linkType="anchor"
    />
    {
      system.revisions.map((revision) => {
        const survey = revision.surveys.find((s) => s.scoreTypeId === typeId);
        return (
          survey && <SystemRevisionContent {revision} {survey} client:load />
        );
      })
    }
  </div>
</PrivateLayout>
